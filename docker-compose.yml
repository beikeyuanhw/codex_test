version: '3.8'

services:
  langgraph-agent:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - LANGSMITH_TRACING=${LANGSMITH_TRACING:-false}
      - LANGSMITH_PROJECT=${LANGSMITH_PROJECT:-langgraph-agent}
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./examples:/app/examples
      - ./tests:/app/tests
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 可选：添加Redis用于缓存和会话存储
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # 可选：添加PostgreSQL用于持久化存储
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=langgraph_agent
      - POSTGRES_USER=agent_user
      - POSTGRES_PASSWORD=agent_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: langgraph-agent-network